# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:/Users/yw980/code/classManager/UI/StuChange.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PySide6 import QtCore, QtGui, QtWidgets
from Functions.SQLConnect import SQLConnect
import os


class Ui_StuChange(object):
    def setupUi(self, StuChange):
        StuChange.setObjectName("StuChange")
        StuChange.resize(1400, 900)
        self.widget = QtWidgets.QWidget(StuChange)
        self.widget.setGeometry(QtCore.QRect(100, 50, 1171, 731))
        self.widget.setObjectName("widget")
        self.gridLayout = QtWidgets.QGridLayout(self.widget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.lineEdit = QtWidgets.QLineEdit(self.widget)
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout.addWidget(self.lineEdit, 0, 0, 1, 1)
        self.queryButton = PrimaryPushButton(self.widget)
        self.queryButton.setObjectName("queryButton")
        self.gridLayout.addWidget(self.queryButton, 0, 1, 1, 1)
        self.TableWidget = TableWidget(self.widget)
        self.TableWidget.setObjectName("TableWidget")
        self.TableWidget.setColumnCount(0)
        self.TableWidget.setRowCount(0)
        self.gridLayout.addWidget(self.TableWidget, 1, 0, 1, 2)
        self.widget1 = QtWidgets.QWidget(StuChange)
        self.widget1.setGeometry(QtCore.QRect(420, 810, 471, 51))
        self.widget1.setObjectName("widget1")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget1)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.changeButton = PrimaryPushButton(self.widget1)
        self.changeButton.setObjectName("changeButton")
        self.horizontalLayout.addWidget(self.changeButton)
        self.deleteButton = PrimaryPushButton(self.widget1)
        self.deleteButton.setObjectName("deleteButton")
        self.horizontalLayout.addWidget(self.deleteButton)
        self.returnButton = PrimaryPushButton(self.widget1)
        self.returnButton.setObjectName("returnButton")
        self.horizontalLayout.addWidget(self.returnButton)

        self.retranslateUi(StuChange)
        QtCore.QMetaObject.connectSlotsByName(StuChange)
        self.queryButton.clicked.connect(self.loadData)

    def retranslateUi(self, StuChange):
        _translate = QtCore.QCoreApplication.translate
        StuChange.setWindowTitle(_translate("StuChange", "学籍管理系统"))
        self.lineEdit.setText(_translate("StuChange", "请输入要查找幼儿的姓名"))
        self.queryButton.setText(_translate("StuChange", "查询"))
        self.changeButton.setText(_translate("StuChange", "修改"))
        self.deleteButton.setText(_translate("StuChange", "删除"))
        self.returnButton.setText(_translate("StuChange", "返回"))

    def handleItemChanged(self, item):
        self.column_to_field = {
            '学号': 'stu_id',
            '幼儿姓名': 'stu_name',
            '性别': 'stu_sex',
            '生日': 'stu_birthday',
            '身份证号': 'stu_idcard',
            '家庭住址': 'stu_address',
            '母亲姓名': 'stu_moname',
            '母亲身份证号': 'stu_moid',
            '父亲姓名': 'stu_faname',
            '父亲身份证号': 'stu_faid',
            '母亲电话': 'stu_mophone',
            '父亲电话': 'stu_faphone',
            '家庭住址': 'stu_liveaddress',
        }
        # 获取修改后的值
        new_value = item.text()
        # 获取行和列
        row = item.row()
        stu_id = self.TableWidget.item(row, 1).text()  # 假设学号在第二列
        date = self.TableWidget.item(row, 0).text()  # 假设日期在第一列
        column = item.column()
        column_name = self.TableWidget.horizontalHeaderItem(column).text()  # 获取列名
        field = self.column_to_field[column_name]  # 获取对应的字段名

        # 创建SQL连接
        sql = SQLConnect(os.environ['MYSQL_USER'], os.environ['MYSQL_PASSWORD'])
        sql.connect()

        # 构建更新语句
        update_query = f"UPDATE StudentHealthy SET {field} = '{new_value}' WHERE date = '{date}' AND stu_id = '{stu_id}'"
        sql.execute(update_query)
        sql.commit()  # 提交事务
    def loadData(self):
        sql = SQLConnect(os.environ['MYSQL_USER'], os.environ['MYSQL_PASSWORD'])
        sql.connect()

        query = f"select * from StudentData"
        results = sql.execute(query)
        self.TableWidget.itemChanged.connect(self.handleItemChanged)
        keys = ['stu_id', 'stu_name','stu_sex', 'stu_birthday', 'stu_idcard','stu_address','stu_moname', 'stu_moid','stu_faname','stu_faid','stu_mophone','stu_faphone','stu_liveaddress']

        # 检查查询结果是否为空
        if not results:
            print("No results found for the given date.")
            return
        # 设置表格的行数和列数
        self.TableWidget.setRowCount(len(results))
        self.TableWidget.setColumnCount(len(keys))

        # 填充表格数据
        for i, result in enumerate(results):
            for j, key in enumerate(keys):
                value = result.get(key)
                if value is not None:
                    self.TableWidget.setItem(i, j, QtWidgets.QTableWidgetItem(str(value)))

        self.TableWidget.viewport().update()  # 刷新表格
        print("TableWidget updated")  # 打印表格更新信息
from qfluentwidgets import PrimaryPushButton, TableWidget
